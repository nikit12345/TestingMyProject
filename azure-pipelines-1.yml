# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3ed2d37d-d668-4151-8292-6bd0a04021c5'
  imageRepository: 'customemyproject'
  containerRegistry: 'myacrddemo.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: Maven@1
      displayName: 'Maven Package'
      inputs:
            mavenPomFile: 'pom.xml'
            goals: 'clean package'
            javaHomeOption: 'JDKVersion'
            jdkVersionOption: '1.17'
            mavenOptions: '-Xmx1024m'
            publishJUnitResults: false
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

## push artifacts pipeline code in addition to build and push
    - bash: echo Contents in System Default Working Directory; ls -R $(System.DefaultWorkingDirectory)
    - bash: echo Before copying Contents in Build Artifact Directory; ls -R $(Build.ArtifactStagingDirectory)
    # Task-2 Copy files (Copy files from a source folder to target folder)
    # Source Directory: $(System.DefaultWorkingDirectory)/kube-manifests
    # Target Directory: $(Build.ArtifactStagingDirectory)

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/manifests'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        # Task-3 publish build artifacts (publish build to azre pipeline)
    - task: PublishBuildArtifacts@1
      inputs:
       PathtoPublish: '$$(Build.ArtifactStagingDirectory)'
       ArtifactName: 'kube-manifests'
       publishLocation: 'Container'
        